# check leap year or not








# def checkLeap(year):
#     if (year % 400 == 0) or ((year % 100 != 0) and (year % 4 == 0)):
#         print("Given Year is a leap Year")
#     else:
#         print("Given Year is not a leap Year")



# year = int(input("Enter the number: "))
# checkLeap(year)



#  Write a Python program to map the values of a given list to a dictionary using a function, where the
# key-value pairs consist of the original value as the key and the result of the function as the value. Go to the editor
# Sample Output:
# {1: 1, 2: 4, 3: 9, 4: 16}
# n=4
# dict={}
# for i in range(1,n+1):
#     dict[i]=i**2
# print(dict)    

#  Write a Python program to retrieve the value of the nested key indicated by the given selector 
#  list from a dictionary or list. Go to the editor
# Sample Output:
# Russell
# 2


# Write a Python program to invert a dictionary with unique hashable values. Go to the editor
# Sample Output:
# {10: 'Theodore', 11: 'Mathew', 9: 'Roxanne'}


# students = {
#   'Theodore': 10,
#   'Mathew': 11,
#   'Roxanne': 9,
# }
# dict2={}
# for key,values in students.items():
#     dict2[values]=key
# print(dict2)    




#  Write a Python program to convert a list of dictionaries into a list of values corresponding to the 
#  specified key. Go to the editor
# Sample Output:
# Original list of dictionaries:
# [{'name': 'Theodore', 'age': 18}, {'name': 'Mathew', 'age': 22}, {'name': 'Roxanne', 'age': 20}, 
#  {'name': 'David', 'age': 18}]
# Convert a list of dictionaries into a list of values corresponding to the specified key:
# [18, 22, 20, 18]


# dict=[{'name': 'Theodore', 'age': 18}, {'name': 'Mathew', 'age': 22}, {'name': 'Roxanne', 'age': 20}, 
#  {'name': 'David', 'age': 18}]
# for i in dict:
#     for key,values in i.items():
#         if key=='age':
#             print(i[key],end=' ')



# Write a Python program to create a dictionary with the same keys as the given dictionary and values
# generated by running the given function for each value. Go to the editor
# Sample Output:
# Original dictionary elements:
# {'Theodore': {'user': 'Theodore', 'age': 45}, 'Roxanne': {'user': 'Roxanne', 'age': 15},
#  'Mathew': {'user': 'Mathew', 'age': 21}}
# Dictionary with the same keys:
# {'Theodore': 45, 'Roxanne': 15, 'Mathew': 21}


# dict1= {'Theodore': {'user': 'Theodore', 'age': 45}, 'Roxanne': {'user': 'Roxanne', 'age': 15},
#  'Mathew': {'user': 'Mathew', 'age': 21}}
# dic={}
# for i in dict1.values():
#     for key,values in i.items():
#         if key=='user' or key=='age':
#             dic[values]=values
# print(dic)        
        
    
    
# Write a Python program to find all keys in a dictionary that have the given value. Go to the editor
# Sample Output:
# Original dictionary elements:
# {'Theodore': 19, 'Roxanne': 20, 'Mathew': 21, 'Betty': 20}
# Find all keys in the said dictionary that have the specified value:
# ['Roxanne', 'Betty']    

# dic1={'Theodore': 19, 'Roxanne': 20, 'Mathew': 21, 'Betty': 20}
# dic2={}
# for i,j in dic1.items():
#      if i=='Roxanne'or i=='Betty':
#          dic2[i]=j
# print(dic2)         

# Write a Python program to combine two lists into a dictionary. 
# The elements of the first one serve as keys and the elements of the second one serve as 
# values. Each item in the first list must be unique and hashable. Go to the editor
# Sample Output:
# Original lists:
# ['a', 'b', 'c', 'd', 'e', 'f']
# [1, 2, 3, 4, 5]
# Combine the values of the said two lists into a dictionary:
# {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5}
# dic1=['a', 'b', 'c', 'd', 'e', 'f']
# dic2=[1, 2, 3, 4, 5]
# dic3={}
# j=1
# for i in dic1:
#    dic3[i]=j
#    j=j+1
# print(dic3)        


# Write a Python program to transform a dictionary into a list of tuples. Go to the editor
# Sample Output:
# Original Dictionary:
# {'Red': 1, 'Green': 3, 'White': 5, 'Black': 2, 'Pink': 4}
# Convert the said dictionary to a list of tuples:
# [('Red', 1), ('Green', 3), ('White', 5), ('Black', 2), ('Pink', 4)]

# dic1={'Red': 1, 'Green': 3, 'White': 5, 'Black': 2, 'Pink': 4}
# list1=[]
# for i in dic1.items():
#     list1.append(i)
# print(list1)    

#  Write a Python program to create a flat list of all the keys in a flat dictionary. Go to the editor
# Sample Output:
# Original dictionary elements:
# {'Theodore': 19, 'Roxanne': 20, 'Mathew': 21, 'Betty': 20}
# Create a flat list of all the keys of the said flat dictionary:
# ['Theodore', 'Roxanne', 'Mathew', 'Betty']

# dict1={'Theodore': 19, 'Roxanne': 20, 'Mathew': 21, 'Betty': 20}
# list1=[]
# for i in dict1.keys():
#     list1.append(i)
# print(list1)    


# Write a Python program to create a flat list of all the values in a flat dictionary. Go to the editor
# Sample Output:
# Original dictionary elements:
# {'Theodore': 19, 'Roxanne': 20, 'Mathew': 21, 'Betty': 20}
# Create a flat list of all the values of the said flat dictionary:
# [19, 20, 21, 20]

# dict1={'Theodore': 19, 'Roxanne': 20, 'Mathew': 21, 'Betty': 20}
# list1=[]
# for i in dict1.values():
#     list1.append(i)
# print(list1)    



# Write a Python program to find the key of the maximum value in a dictionary. Go to the editor
# Sample Output:
# Original dictionary elements:
# {'Theodore': 19, 'Roxanne': 22, 'Mathew': 21, 'Betty': 20}
# Finds the key of the maximum and minimum value of the said dictionary:
# ('Roxanne', 'Theodore')

# dict={'Theodore': 19, 'Roxanne': 22, 'Mathew': 21, 'Betty': 20}
# sort_list=sorted(dict,key=lambda dict:dict[0])   
# print(sort_list)   



#  Write a Python program to sort a given matrix in ascending order according to the sum of its rows. Go to the editor
# Original Matrix:
# [[1, 2, 3], [2, 4, 5], [1, 1, 1]]
# Sort the said matrix in ascending order according to the sum of its rows
# [[1, 1, 1], [1, 2, 3], [2, 4, 5]]
# Original Matrix:
# [[1, 2, 3], [-2, 4, -5], [1, -1, 1]]
# Sort the said matrix in ascending order according to the sum of its rows
# [[-2, 4, -5], [1, -1, 1], [1, 2, 3]]

# dic=[[1, 2, 3], [-2, 4, -5], [1, -1, 1]]
# sort_list=sorted(dic,key=lambda dic:dic[0])
# print(sort_list)


# Write a Python program to extract specified size of strings from a give list of string values. Go to the editor
# Original list:
# ['Python', 'list', 'exercises', 'practice', 'solution']
# length of the string to extract:
# 8
# After extracting strings of specified length from the said list:
# ['practice', 'solution']

# list1=['Python', 'list', 'exercises', 'practice', 'solution']
# for i in list1:
#     max_lenght=len(i)
#     if len(i)>max_lenght:
#         max_lenght=len(i)
# print(max_lenght)        


#  Write a Python program to extract specified number of elements from a given list, which follows
#  each other continuously. Go to the editor
# Original list:
# [1, 1, 3, 4, 4, 5, 6, 7]
# Extract 2 number of elements from the said list which follows each other continuously:
# [1, 4]
# Original lists:
# [0, 1, 2, 3, 4, 4, 4, 4, 5, 7]
# Extract 4 number of elements from the said list which follows each other continuously:
# [4]

# list1=[1, 1, 3, 4, 4, 5, 6, 7]
# list2=[]
# for i in list1:
#     if i==1 or i==4:
#         if i not in list2:
#             list2.append(i)
# print(list2)            



# Write a Python program to find the difference between consecutive numbers in a given list. Go to the editor
# Original list:
# [1, 1, 3, 4, 4, 5, 6, 7]
# Difference between consecutive numbers of the said list:
# [0, 2, 1, 0, 1, 1, 1]
# Original list:
# [4, 5, 8, 9, 6, 10]
# Difference between consecutive numbers of the said list:
# [1, 3, 1, -3, 4]

# list1=[1, 1, 3, 4, 4, 5, 6, 7]
# list2=[]
# for i in range(len(list1)):
#     k=list1[1]-list1[0]
#     list2.append(k)
# print(list2)    
    


# Write a Python program to compute average of two given lists. Go to the editor
# Original list:
# [1, 1, 3, 4, 4, 5, 6, 7]
# [0, 1, 2, 3, 4, 4, 5, 7, 8]
# Average of two lists:
# 3.823529411764706

# list1=[1, 1, 3, 4, 4, 5, 6, 7]
# list2=[0, 1, 2, 3, 4, 4, 5, 7, 8]
# sum1=0
# sum2=0
# for i in list1:
#     for j in list2:
#         sum1=sum1+i
#         sum2=sum2+j
# avg=(sum1+sum2)/2
# print(avg)        


# Write a Python program to count integers in a given mixed list. Go to the editor
# Original list:
# [1, 'abcd', 3, 1.2, 4, 'xyz', 5, 'pqr', 7, -5, -12.22]
# Number of integers in the said mixed list:
# 6
 
 
# dic= [1, 'abcd', 3, 1.2, 4, 'xyz', 5, 'pqr', 7, -5, -12.22]
# count=0
# for i in dic:
#     if type(i)==int:
#         count=count+1 
# print(count)    
    
    
# Write a Python program to remove a specified column from a given nested list. Go to the editor
# Original Nested list:
# [[1, 2, 3], [2, 4, 5], [1, 1, 1]]
# After removing 1st column:
# [[2, 3], [4, 5], [1, 1]]
# Original Nested list:
# [[1, 2, 3], [-2, 4, -5], [1, -1, 1]]
# After removing 3rd column:
# [[1, 2], [-2, 4], [1, -1]]  

# list1=[[1, 2, 3], [2, 4, 5], [1, 1, 1]]
# list2=[]
# for i in list1:
#     for j in i:
#         list2.append(i[1:])
#         break
# print(list2)          




#  Write a Python program to extract a specified column from a given nested list. Go to the editor
# Original Nested list:
# [[1, 2, 3], [2, 4, 5], [1, 1, 1]]
# Extract 1st column:
# [1, 2, 1]
# Original Nested list:
# [[1, 2, 3], [-2, 4, -5], [1, -1, 1]]
# Extract 3rd column:
# [3, -5, 1]

# list1=[[1, 2, 3], [-2, 4, -5], [1, -1, 1]]
# list2=[]
# for i in list1:
#     for j in i:
#         list2.append(i[-1])
#         break
# print(list2)    


# Write a Python program to rotate a given list by a specified number of items in the right or left direction.
# Go to the editor
# original List:
# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# Rotate the said list in left direction by 4:
# [4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4]
# Rotate the said list in left direction by 2:
# [3, 4, 5, 6, 7, 8, 9, 10, 1, 2]
# Rotate the said list in Right direction by 4:
# [8, 9, 10, 1, 2, 3, 4, 5, 6]
# Rotate the said list in Right direction by 2:
# [9, 10, 1, 2, 3, 4, 5, 6, 7, 8]

# list1=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# list2=[]
# list2.append(list1[4:]+list1[:4])
# print(list2)    


#  Write a Python program to find the item with the most occurrences in a given list. Go to the editor
# Original list:
# [2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 4, 6, 9, 1, 2]
# Item with maximum occurrences of the said list:
# 2

# Write a Python program to access multiple elements at a specified index from a given list. Go to the editor
# Original list:
# [2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 4, 6, 9, 1, 2]
# Index list:
# [0, 3, 5, 7, 10]
# Items with specified index of the said list:
# [2, 4, 9, 2, 1]


# list1=[2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 4, 6, 9, 1, 2]



#  Write a Python program to check whether a specified list is sorted or not. Go to the editor
# Original list:
# [1, 2, 4, 6, 8, 10, 12, 14, 16, 17]
# Is the said list is sorted!
# True
# Original list:
# [1, 2, 4, 6, 8, 10, 12, 14, 16, 17]
# Is the said list is sorted!
# False

# list1=[1, 2, 4, 6, 8, 10, 12, 14, 16, 17]
# for i in range(len(list1)-1):
#     if list1[i]<=list1[i+1]:
#         print('True')
#     else:
#         print('False')


#Write a Python program to create a list taking alternate elements from a given list. Go to the editor
# Original list:
# ['red', 'black', 'white', 'green', 'orange']
# List with alternate elements from the said list:
# ['red', 'white', 'orange']
# Original list:
# [2, 0, 3, 4, 0, 2, 8, 3, 4, 2]
# List with alternate elements from the said list:
# [2, 3, 0, 8, 4]  




# Write a Python program to find nested list elements that are present in another list. Go to the editor
# Original lists:
# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
# [[12, 18, 23, 25, 45], [7, 11, 19, 24, 28], [1, 5, 8, 18, 15, 16]]
# Intersection of said nested lists:
# [[12], [7, 11], [1, 5, 8]]

# list1=[[12, 18, 23, 25, 45], [7, 11, 19, 24, 28], [1, 5, 8, 18, 15, 16]]
# list2=[]
# k=1
# for i in list1:
#     for j in i:
#         list2.append(i[:k])
#         break
#     k=k+1
# print(list2)        

# Write a Python program to find common elements in a nested list. Go to the editor
# Original lists:
# [[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]]
# Common element(s) in nested lists:
# [18, 12]

# list1=[[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]]
# list2=[]
# for i in list1:
#     for j in i:
#         list2.append(i[6:])
# print(list2)        


# Write a Python program to reverse strings in a given list of string values. Go to the editor
# Original lists:
# ['Red', 'Green', 'Blue', 'White', 'Black']
# Reverse strings of the said given list:
# ['deR', 'neerG', 'eulB', 'etihW', 'kcalB']


# list1=['Red', 'Green', 'Blue', 'White', 'Black']
# list2=[]
# k=''
# for i in list1:
#     for j in i:
#         k=j+k 
          
#     list2.append(k)

# print(list2)           




# Write a Python program to find the maximum and minimum product of pairs of tuples within a given list. Go to the editor
# The original list, tuple :
# [(2, 7), (2, 6), (1, 8), (4, 9)]
# Maximum and minimum product from the pairs of the said tuple of list:
# (36, 8)

# list1=[(2, 7), (2, 6), (1, 8), (4, 9)]
# list2=[]
# for i in list1:
#     k=1
#     for j in i:
#         k=k*j
#     list2.append(k)
# print(max(list2))     
# print(min(list2))      

#  Write a Python program to calculate the product of the unique numbers in a given list. Go to the editor
# Original List : [10, 20, 30, 40, 20, 50, 60, 40]
# Product of the unique numbers of the said list: 720000000


# list1=[10, 20, 30, 40, 20, 50, 60, 40]
# list2=[]
# mul1=1
# for i in list1:
#     if i not in list2:
#         mul1=mul1*i
#         list2.append(i)
# print(mul1)        
        
        
        
        
# Write a Python program to interleave multiple lists of the same length. Go to the editor
# Original list:
# list1: [1, 2, 3, 4, 5, 6, 7]
# list2: [10, 20, 30, 40, 50, 60, 70]
# list3: [100, 200, 300, 400, 500, 600, 700]
# Interleave multiple lists:
# [1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]        


# list1= [1, 2, 3, 4, 5, 6, 7]
# list2= [10, 20, 30, 40, 50, 60, 70]
# list3= [100, 200, 300, 400, 500, 600, 700]
# list4=[]
# for i in list1:
#     for j in list2:
#         for k in list3:
#             list4.append(i,j,k)
# print(list4)            



# Write a Python program to remove words from a given list of strings containing a character or string. Go to the editor
# Original list:
# list1: ['Red color', 'Orange#', 'Green', 'Orange @', 'White']
# Character list:
# ['#', 'color', '@']
# New list:
# ['Red', '', 'Green', 'Orange', 'White']


# Write a Python program to calculate the sum of the numbers in a list between the indices of a specified range.
# Go to the editor
# Original list:
# [2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12]
# Range: 8 , 10
# Sum of the specified range:
# 29

# li1=[2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12]
# sum=0
# for i in range((len(li1)-4),(len(li1))-1,1):
#     sum=sum+i
# print(sum)    



#  Write a Python program to reverse each list in a given list of lists. Go to the editor
# Original list of lists:
# [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]
# Reverse each list in the said list of lists:
# [[4, 3, 2, 1], [8, 7, 6, 5], [12, 11, 10, 9], [16, 15, 14, 13]]
# Click me to see the sample solution

# list1=[[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]
# list2=[]
# for i in list1:
#    r=i.reverse() 
#    list2.append(r)   
# print(list2)   
   
   
# . Write a Python program to count the frequency of consecutive duplicate elements in a given list of numbers. 
# Go to the editor
# Original lists:
# [1, 2, 2, 2, 4, 4, 4, 5, 5, 5, 5]
# Consecutive duplicate elements and their frequency:
# ([1, 2, 4, 5], [1, 3, 3, 4])   



#  Write a Python program to check if two lists have the same elements in them in same order or not. Go to the editor
# Original lists:
# ['red', 'green', 'black', 'orange']
# ['red', 'pink', 'green', 'white', 'black']
# ['white', 'orange', 'pink', 'black']
# Test common elements between color1 and color2 are in same order?
# True
# Test common elements between color1 and color3 are in same order?
# False
# Test common elements between color2 and color3 are in same order?
# False




#  Write a Python program to find the difference between two lists including duplicate elements. Go to the editor
# Original lists:
# [1, 1, 2, 3, 3, 4, 4, 5, 6, 7]
# [1, 1, 2, 4, 5, 6]
# Difference between two said list including duplicate elements):
# [3, 3, 4, 7]




# Write a Python program to combine two sorted lists using the heapq module. Go to the editor
# Original sorted lists:
# [1, 3, 5, 7, 9, 11]
# [0, 2, 4, 6, 8, 10]
# After merging the said two sorted lists:
# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]


# list2=[1, 3, 5, 7, 9, 11]
# list1= [0, 2, 4, 6, 8, 10]
# list3=list2+list1
# print(sorted(list3))


# Write a Python program to check if a given element occurs at least n times in a list. Go to the editor
# Original list:
# [0, 1, 3, 5, 0, 3, 4, 5, 0, 8, 0, 3, 6, 0, 3, 1, 1, 0]
# Check if 3 occurs at least 4 times in a list:
# True
# Check if 0 occurs at least 5 times in a list:
# True
# Check if 8 occurs at least 3 times in a list:
# False

# list1=[0, 1, 3, 5, 0, 3, 4, 5, 0, 8, 0, 3, 6, 0, 3, 1, 1, 0]
# count=0
# for i in list1:
#     if i ==3:
#         count=count+1
# if count==4:
#     print('True')
# else:
#     print(False)        


#  Write a Python program to join two given list of lists of the same length, element wise. Go to the editor
# Original lists:
# [[10, 20], [30, 40], [50, 60], [30, 20, 80]]
# [[61], [12, 14, 15], [12, 13, 19, 20], [12]]
# Join the said two lists element wise:
# [[10, 20, 61], [30, 40, 12, 14, 15], [50, 60, 12, 13, 19, 20], [30, 20, 80, 12]]
# Original lists:
# [['a', 'b'], ['b', 'c', 'd'], ['e', 'f']]
# [['p', 'q'], ['p', 's', 't'], ['u', 'v', 'w']]
# Join the said two lists element wise:
# [['a', 'b', 'p', 'q'], ['b', 'c', 'd', 'p', 's', 't'], ['e', 'f', 'u', 'v', 'w']]


# list1= [[10, 20], [30, 40], [50, 60], [30, 20, 80]]
# list2=[[61], [12, 14, 15], [12, 13, 19, 20], [12]]
# list3=[]
# for i in list1:
#     for j in list2:
#         list3.append(i)
#         list3.append(j)
#         break
# print(list3)        



# Write a Python program to add two given lists of different lengths, starting on the left. Go to the editor
# Original lists:
# [2, 4, 7, 0, 5, 8]
# [3, 3, -1, 7]
# Add said two lists from left:
# [5, 7, 6, 7, 5, 8]
# Original lists:
# [1, 2, 3, 4, 5, 6]
# [2, 4, -3]
# Add said two lists from left:
# [3, 6, 0, 4, 5, 6]


# list1= [2, 4, 7, 0, 5, 8]
# list2=[3, 3, -1, 7]
# list3=[]
# k=0
# for i in range(len(list2)):
#     r=list2[i]+list1[i]
#     k=k+1
#     list3.append(r)
# print(list3)    


# 156. Write a Python program to add two given lists of different lengths, starting on the right. Go to the editor
# Original lists:
# [2, 4, 7, 0, 5, 8]
# [3, 3, -1, 7]
# Add said two lists from left:
# [2, 4, 10, 3, 4, 15]
# Original lists:
# [1, 2, 3, 4, 5, 6]
# [2, 4, -3]
# Add said two lists from left:
# [1, 2, 3, 6, 9, 3]


# list1= [2, 4, 7, 0, 5, 8]
# list2= [3, 3, -1, 7]
# list3=[]    
# for i in range(len(list2)):
#     r=list2[i]+list1[(2+i)]
#     list3.append(r)
# print(list3)    


# Write a Python program to find the maximum and minimum values in a given list of tuples. Go to the editor
# Original list with tuples:
# [('V', 60), ('VI', 70), ('VII', 75), ('VIII', 72), ('IX', 78), ('X', 70)]
# Maximum and minimum values of the said list of tuples:
# (78, 60)

# list1=[('V', 60), ('VI', 70), ('VII', 75), ('VIII', 72), ('IX', 78), ('X', 70)]
# list2=[]
# for i in list1:
#     for j in i:
#         if j.isalnum():
#             print(j)
#         list2.append(j)
# print(list2)            
        
        
# . Write a Python program to append the same value/a list multiple times to a list/list-of-lists. Go to the editor
# Add a value(7), 5 times, to a list:
# ['7', '7', '7', '7', '7']
# Add 5, 6 times, to a list:
# [1, 2, 3, 4, 5, 5, 5, 5, 5, 5]
# Add a list, 4 times, to a list of lists:
# [[1, 2, 5], [1, 2, 5], [1, 2, 5], [1, 2, 5]]
# Add a list, 3 times, to a list of lists:
# [[5, 6, 7], [1, 2, 5], [1, 2, 5], [1, 2, 5], [1, 2, 5]]
# Click me to see the sample solution      

# list1=[]
# for i in range(5):
#     list1.append(7)  
# print(list1)    

# list1=[]
# for i in range(1,9):
#     if i<=4:
#         list1.append(i)
#     else:
#         list1.append(5)
# print(list1)        


# list1=[]
# for i in range(4):
#     list1.append([1,2,5])
# print(list1)    


 #Write a program to reverse an integer in Python

# str1=input('enter the string :')
# str2=''
# for i in str1:
#     str2=i+str2
# print(str2)    
    
#Write a program in Python to check whether an integer is Armstrong number or not.

# def Armstrong_number(n):
#     tem=n
#     sum=0
#     while n>0:
#         r=n%10
#         print(r)
#         sum=sum+r**3
#         n=n//10
#         print(sum)        
    
#     if tem==sum:
#         print(tem,'is Armstrong_number') 
#     else:
#         print(tem,'is not Armstrong_number')       
# n=int(input('enter the number :'))
# (Armstrong_number(n))


#Write a program in Python to check given number is prime or not.

# def prime(n):
#     sum=0
#     for i in range(1,n):
#         if n%i==0:
#             sum=sum+i
#     print(sum)    
    # if n==sum:
    #     print('prime')
    # else:
    #     print('not prime')

# n=int(input('enter the number :'))
# prime(n)



#Write a program in Python to check given number is prime or not.

# def is_prime(n):
#     count=0
#     for i in range(2,n+1):
#         if n%i==0:
#             count=count+1
#     if count==1:
#         print('prime')
#     else:
#         print('not prime')        

# n=int(input('enter the number :'))
# is_prime(n)


#Write a program in Python to print the Fibonacci series using iterative method.

# n= int(input('enter the number :'))
# a=0
# b=1

# for i in range(n+1):
#     c=a+b
#     a=b
#     b=c
#     print(a)

# def Fibonacci(n):
#     if n==0:
#         return 0
#     if n==1:
#         return 1
#     else:
#         return Fibonacci(n-1)+Fibonacci(n-2)

# n=int(input('enter the number :'))
# for i in range(n+1):
#     print(Fibonacci(i))


#Write a program in Python to check whether a number is palindrome or not using iterative method.
# n=int(input('enter the nuber :'))
# tem=n
# sum=0
# while n>0:
#     rem=n%10
#     sum=sum*10+rem
#     n=n//10
# print(sum)   
# if tem==sum:
#     print('palindrome') 
# else:
#     print('not palindrome') 

# Write a program in Python to check whether a number is palindrome or not using recursive method.
    
# def  is_palindrome(n):
#     if n<10:
#         return n
#     else:
#         return n%10+n//10   
    
# n=int(input('enter the number :'))
# print(is_palindrome(n))        


#Write a program in Python to find greatest among three integers.

#Write a program in Python to find sum of digits of a number using recursion?
# def sum_digits(n):
#     if n==0:
#         return 0
#     else:
#        return n%10+ sum_digits(n//10)
    
# n=int(input('enter the number :'))
# print(sum_digits(n))


#Write a program in Python to swap two numbers without using third variable?
# a=7
# b=8
# b=b-a
# a=a+b
# b=a-b
# print(a,b)

# a=6
# b=8
# h=a
# a=b
# b=h
# print(a,b)

# Write a program in Python to add two integer without using arithmetic operator?
# a=8
# b=7
# a+=b
# print(a)


#Write a program in Python to find prime factors of a given integer.

# n=int(input('enter the nuber :'))
# for i in range(2,n+1):
#     if n%i==0:
#         print(i,'is first prime factors')
#         break

#Python Program to find the Average of numbers with explanations.

# a=5
# b=3
# c=9
# d=(a+b+c)/3
# print(d)


#Python Program to calculate factorial using iterative method.

# n=int(input('enter the number :'))
# if n<=0:
#     print('not fact')
# elif n==1:
#     print(1)
# else:  
#     fact=1  
#     for i in range(1,n+1):
#         fact=fact*i
#     print(fact)


#Python Program to calculate factorial using recursion.

# def fact(n):
#     if n==1:
#         return 1
#     else:
#         return n*fact(n-1)

# n=int(input('enter the number :'))
# print(fact(n))


#Python Program to check a given number is even or odd.
# n= int(input('enter the number :'))
# if n%2==0:
#     print('even')
# else:
#     print('no')

#Python program to print first n Prime Number with explanation.
# n=int(input('enter the number :'))
# count=0
# for i in range(2,n+1):
#     if n%i==0:
#         count=count+1
# if count==1:
#     print('yes')
# else:
#     print('no')      

#Python Program to print Prime Number in a given range.
# list1=[]
# for i in range(10,70):
#     count=0
#     for j in range(2,71):
#         if i%j==0:
#             count=count+1
#     if count==1:
#         list1.append(i)        
    
# print(list1)          

#Python program to calculate the power using the POW method.

# n=int(input('enter the number :'))
# r=2**n
# print(r)     
      
      
#Python Program to calculate the square of a given number.
      
      
# n=int(input('enter the number :'))
# r=n**.5
# print(r)      


#Python Program to calculate the cube of a given number.

#Python Program to Convert Decimal Number into Binary.

# n=int(input('enter the number :'))
# sum=''
# while n>0:
#     rem=n%2
#     sum=str(rem)+sum
#     n=n//2
# print(sum)    